version: "3.8"

services:
  mytask-api:
    image: ${DOCKER_REGISTRY-}mytask-api:v1
    container_name: mytask-api
    build:
      context: ./Services/Mytask/Mytask.API
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80  # https://+:443;http://+:80
      # - ASPNETCORE_Kestrel__Certificates__Default__Password=Pass@*****
      # - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/mytask.pfx
    ports:
      - "8081:80"
      # - "8091:443"
    networks:
      - auth-network
    restart: on-failure
    depends_on:
      - mongodb
      - config-server
      - eureka    
    # volumes:
    #   - ~/.aspnet/https:/https:ro
  
  api-gateway:
    image: ${DOCKER_REGISTRY-}api-gateway:v1
    container_name: api-gateway
    build:
      context: ./ApiGateways/Web.Bff.Aggregator
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5052
    ports:
      - "8083:5052"
    networks:
      - auth-network
    restart: on-failure
    depends_on:
      - mytask-api   

  keycloak:
    image: quay.io/keycloak/keycloak:20.0
    command: start-dev
    container_name: keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak_db
      DB_USER: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin_password
    ports:
      - "8484:8080"
    depends_on:
      - postgres
    links:
      - "postgres:postgres"
    networks:
      - auth-network

  config-server:
    image: steeltoeoss/config-server
    ports:
      - '8888:8888'
    command: --spring.cloud.config.server.git.uri=https://github.com/VladislavPiunov/my-config.git 
             --spring.cloud.config.server.git.default-label=main
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8888"]
        interval: 30s
        timeout: 10s
        retries: 5

  eureka:
    container_name: eureka
    image: steeltoeoss/eureka-server
    ports:
      - "8761:8761"

  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    ports:
      - 8080:8080
      - 50000:50000
    container_name: jenkins
    volumes:
      - C:/Users/piunov_vn/projects/Mytask/jenkins_compose/jenkins_configuration:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock

  # rabbitmq:
  #   container_name: rabbitmq
  #   image: rabbitmq:3.12-management
  #   environment:
  #     RABBITMQ_DEFAULT_USER: "admin"
  #     RABBITMQ_DEFAULT_PASS: "admin"
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"

  postgres:
    container_name: postgres
    image: library/postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: keycloak_db
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - auth-network

  mongodb:
    image: mongodb/mongodb-community-server:latest
    ports:
      - '27017:27017'
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=user
      - MONGODB_INITDB_ROOT_PASSWORD=pass
      - MONGODB_INITDB_DATABASE=mytask
    volumes:
      - type: bind
        source: ./data
        target: /data/db
        
  # redis:
  #   image: redis:latest
  #   restart: on-failure
  #   ports:
  #    - "6379:6379"
  #   environment:
  #    - REDIS_PASSWORD=my-password
  #    - REDIS_PORT=6379
  #    - REDIS_DATABASES=1

networks:
  auth-network:
    driver: bridge